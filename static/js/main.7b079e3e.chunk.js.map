{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","users","map","find","App","useState","todosFromServer","setTodos","setUserId","setTitle","errorTitle","setErrorTitle","errorUser","setErrorUser","action","method","type","value","onChange","event","target","replace","placeholder","disabled","usersFromServer","onClick","preventDefault","trim","sort","todo1","todo2","prevState","addUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b079e3e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={user.email}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  user: User;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo, user }) => {\n  const {\n    title,\n    id,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo', { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todos: Todo[];\n  users: User[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, users }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(\n        todo => (\n          <TodoInfo\n            todo={todo}\n            user={users.find(user => todo.userId === user.id) || users[0]}\n          />\n        ),\n      )}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n  const [userId, setUserId] = useState<number>(0);\n  const [title, setTitle] = useState<string>('');\n  const [errorTitle, setErrorTitle] = useState<boolean>(false);\n  const [errorUser, setErrorUser] = useState<boolean>(false);\n\n  const addUser = () => {\n    const id = [...todos].sort(\n      (todo1, todo2) => todo2.id - todo1.id,\n    )[0].id + 1;\n\n    setTodos((prevState) => (\n      [\n        ...prevState,\n        {\n          id,\n          title,\n          completed: false,\n          userId,\n        }]));\n  };\n\n  const handleSubmitButton = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    if (!userId) {\n      setErrorUser(true);\n    }\n\n    if (!title.trim()) {\n      setErrorTitle(true);\n    }\n\n    if (userId && title) {\n      addUser();\n      setUserId(0);\n      setTitle('');\n    }\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value.replace(/[^a-z-а-я-0-9-' ']/gi, ''));\n    setErrorTitle(false);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setErrorUser(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              value={title}\n              onChange={handleTitleChange}\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n            />\n          </label>\n          {errorTitle && <span className=\"error\">Please, enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              name=\"user\"\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleSelect}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {\n                usersFromServer.map(user => (\n                  <option value={user.id} key={user.id}>{user.name}</option>))\n              }\n            </select>\n          </label>\n          {errorUser && <span className=\"error\">Please, choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={handleSubmitButton}\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} users={usersFromServer} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}